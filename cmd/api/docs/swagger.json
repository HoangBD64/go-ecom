{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/login": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Enter this fields on login page post",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "to get the json format for login",
                "operationId": "LoginGet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.LoginStruct"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Enter user_name/phone/email with password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "api for user login",
                "operationId": "LoginPost",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helper.LoginStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Loged In"
                    },
                    "400": {
                        "description": "faild to login"
                    },
                    "500": {
                        "description": "faild to generat JWT"
                    }
                }
            }
        },
        "/login-otp-send": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user can enter email/user_name/phone will send an otp to user phone",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login-otp"
                ],
                "summary": "api for user login with otp",
                "operationId": "LoginOtpSend",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helper.OTPLoginStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Otp Send to registered number"
                    },
                    "400": {
                        "description": "Enter input properly"
                    },
                    "500": {
                        "description": "Faild to send otp"
                    }
                }
            }
        },
        "/login-otp-verify": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "enter your otp that send to your registered number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login-otp"
                ],
                "summary": "varify user login otp",
                "operationId": "LoginOtpVerify",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helper.OTPVerifyStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Logged In"
                    },
                    "400": {
                        "description": "Invalid Otp"
                    },
                    "500": {
                        "description": "Faild to generate JWT"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user can logout",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logout"
                ],
                "summary": "api for user to lgout",
                "operationId": "Logout",
                "responses": {
                    "200": {
                        "description": "Successfully logout"
                    }
                }
            }
        },
        "/signup": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user can see what are the fields to enter to create a new account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signup"
                ],
                "summary": "api for user to signup page",
                "operationId": "SignUpGet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user can send user details and validate and create new account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signup"
                ],
                "summary": "api for user to post the user details",
                "operationId": "SignUpPost",
                "responses": {
                    "200": {
                        "description": "Successfully account created"
                    },
                    "400": {
                        "description": "Faild to create account"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.User": {
            "type": "object",
            "required": [
                "age",
                "email",
                "first_name",
                "last_name",
                "password",
                "phone",
                "user_name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "block_status": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "helper.LoginStruct": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 5
                },
                "phone": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "helper.OTPLoginStruct": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 3
                }
            }
        },
        "helper.OTPVerifyStruct": {
            "type": "object",
            "required": [
                "id",
                "otp"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "otp": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 4
                }
            }
        }
    }
}