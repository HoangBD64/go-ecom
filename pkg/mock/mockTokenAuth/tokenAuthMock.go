// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/token (interfaces: TokenAuth)

// Package mockTokenAuth is a generated GoMock package.
package mockTokenAuth

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	token "github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/token"
)

// MockTokenAuth is a mock of TokenAuth interface.
type MockTokenAuth struct {
	ctrl     *gomock.Controller
	recorder *MockTokenAuthMockRecorder
}

// MockTokenAuthMockRecorder is the mock recorder for MockTokenAuth.
type MockTokenAuthMockRecorder struct {
	mock *MockTokenAuth
}

// NewMockTokenAuth creates a new mock instance.
func NewMockTokenAuth(ctrl *gomock.Controller) *MockTokenAuth {
	mock := &MockTokenAuth{ctrl: ctrl}
	mock.recorder = &MockTokenAuthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenAuth) EXPECT() *MockTokenAuthMockRecorder {
	return m.recorder
}

// CreateToken mocks base method.
func (m *MockTokenAuth) CreateToken(arg0 *token.Payload, arg1 token.UserType) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MockTokenAuthMockRecorder) CreateToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockTokenAuth)(nil).CreateToken), arg0, arg1)
}

// VerifyToken mocks base method.
func (m *MockTokenAuth) VerifyToken(arg0 string, arg1 token.UserType) (token.Payload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyToken", arg0, arg1)
	ret0, _ := ret[0].(token.Payload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyToken indicates an expected call of VerifyToken.
func (mr *MockTokenAuthMockRecorder) VerifyToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*MockTokenAuth)(nil).VerifyToken), arg0, arg1)
}
